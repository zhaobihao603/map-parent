<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imap.cloud.common.dao.security.OrganizationalMapper">
  
  <resultMap id="organizationalResultMap" type="Organizational">
    <id column="id" property="id" jdbcType="CHAR" />
  	<result column="text" property="text" jdbcType="VARCHAR" />
	<result column="state" property="state" jdbcType="VARCHAR" />
	<result column="parentId" property="parentId" jdbcType="CHAR" />
	<!-- 机构和用户 
	<collection property="userSet" ofType="User" resultMap="com.imap.cloud.common.dao.security.UserMapper.userResultMap"></collection>
 	-->
  </resultMap>
  
  <select id="selectAll" resultMap="organizationalResultMap">
  	select * from sec_organizational o where o.parentId is null or o.parentId = ''
  </select>
  
  <select id="selectByPkList" parameterType="String" resultMap="organizationalResultMap">
  	select * from sec_organizational o where o.parentId = #{id}
  </select>
  
  <select id='selectByPkTwo' resultMap="organizationalResultMap">
   select * from sec_organizational o where o.id = #{id}
  </select>
  
  <select id="findAllSonNode" resultMap="organizationalResultMap">
  	<![CDATA[ select * from sec_organizational s where s.parentId is not null and s.parentId <> ''  ]]>
  </select>
  
  <select id="findSonNodeName" parameterType="String" resultType="int">
  	<![CDATA[ select count(1) from sec_organizational s where s.text = #{name} ]]>
  </select>
  
  <insert id="insertSelective" parameterType="Organizational" >
  	insert into	sec_organizational(id,text,state,parentId)
  	values(#{id},#{text},#{state},#{parentId})
  </insert>
  
  <insert id="insertUser" parameterType="map" useGeneratedKeys="false">
  	<!-- insert into sec_organizational_user(oid,uid) values
  	<foreach collection="uid" item="uid" separator="," >
  		(#{oid},#{uid})
  	</foreach> -->	 
  	insert into sec_organizational_user(oid,uid) 
  	<foreach collection="uid" item="uid" separator="union all" >
  		select #{oid},#{uid} from dual 
  	</foreach>
  </insert>
  
  <update id="updateByPKParentNode" parameterType="String">
   update sec_organizational set state = "closed" where id = #{parentId}
  </update>
  
  <update id="updateByPkSelective" parameterType="Organizational" >
     update sec_organizational  
     <set>
	     <if test="parentId != null">
	    	 parentId = #{parentId},
	     </if>
	     <if test="text != null">
	    	 text = #{text},
	     </if>
	     <if test="state != null">
	    	 state = #{state}
	     </if>
     </set>
     where id = #{id}
  </update>
  
  <delete id="deleteByPk" parameterType="String">
  	delete FROM  sec_organizational where id = #{id}
  </delete>
  
  <delete id="deleteByPkUser" parameterType="String">
   delete FROM  sec_organizational_user where oid = #{id}
  </delete>
  
  <delete id="deleteByPkForEachSubNode" >
    delete from sec_organizational where id in
  	<foreach collection="list" item="list" open="(" close=")" separator=",">
		 #{list}
	</foreach>
  </delete>
  
  <select id="selectPKLoadUser" parameterType="map" resultMap="com.imap.cloud.common.dao.security.UserMapper.userResultMap">
  	select DISTINCT u.* from sec_organizational o join sec_organizational_user ou
	on o.id = ou.oid
	JOIN sec_user u on u.a_id = ou.uid where o.id in 
	<foreach collection="id" item="id" open="(" close=")" separator=",">
		 #{id}
	</foreach>
	<!-- = #{id} 
	<if test="type == 'closed'">
		or o.parentId = #{id}
	</if> -->
	and u.deleted = 0 
	<if test="search != null and search != ''">
	and name like CONCAT('%',#{search},'%' )
	</if>
  </select>
  
  <select id="selectPKLoadUserCount" parameterType="map" resultType="int">
  	select count(DISTINCT u.login) from sec_organizational o join sec_organizational_user ou
	on o.id = ou.oid
	JOIN sec_user u on u.a_id = ou.uid where o.id in
	<foreach collection="id" item="id" open="(" close=")" separator=",">
		 #{id}
	</foreach>
	<!-- = #{id} 
	<if test="type == 'closed'">
		or o.parentId = #{id}
	</if> -->
	and u.deleted = 0 
	<if test="search != null and search != ''">
	and name like CONCAT('%',#{search},'%' )
	</if>
  </select>
  
  <select id="UpdateDisabledPKStart" parameterType="map">
  	update sec_user u 
  	<set>
  		<if test="isAccountNonExpired != null and isAccountNonExpired != ''">
  			u.isAccountNonExpired = #{isAccountNonExpired},
  		</if>
  		<if test="isAccountNonLocked != null and isAccountNonLocked != ''">
  			u.isAccountNonLocked = #{isAccountNonLocked},
  		</if>
  		<if test="isCredentialsNonExpired != null and isCredentialsNonExpired != ''">
  			u.isCredentialsNonExpired = #{isCredentialsNonExpired},
  		</if>
  		<if test="isEnabled != null and isEnabled != ''">
  			u.isEnabled = #{isEnabled}
  		</if>
  	</set>
  	where u.a_id in
  	<foreach collection="array" item="id" separator=",">
  		(#{id})
  	</foreach> 
  </select>
  
  
</mapper>